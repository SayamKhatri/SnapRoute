name: CI/CD - Build & Deploy SnapRoute

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  ECR_REGISTRY: 569381789706.dkr.ecr.us-east-1.amazonaws.com
  ECR_REPOSITORY: snaproute-inference
  IMAGE_TAG: ${{ github.sha }}
  LAMBDA_FUNCTION_NAME: snaproute

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build & push Docker image
        working-directory: lambda
        run: |
          docker buildx create --use --name buildx_builder || true
          docker buildx inspect --bootstrap
          docker buildx build \
            --platform linux/amd64 \
            --load \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
            .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Update Lambda function code
        run: |
          aws lambda update-function-code \
            --function-name $LAMBDA_FUNCTION_NAME \
            --image-uri $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Wait for Lambda code update to finish
        run: |
          for i in {1..12}; do
            status=$(aws lambda get-function-configuration \
              --function-name $LAMBDA_FUNCTION_NAME \
              --query 'LastUpdateStatus' --output text)
            echo "Lambda LastUpdateStatus: $status"
            if [[ "$status" == "Successful" ]]; then
              echo "Code update complete."
              exit 0
            elif [[ "$status" == "Failed" ]]; then
              echo "Code update failed."
              exit 1
            fi
            sleep 5
          done
          echo "Timed out waiting for Lambda code update."
          exit 1

      - name: Update Lambda configuration (env vars)
        run: |
          aws lambda update-function-configuration \
            --function-name $LAMBDA_FUNCTION_NAME \
            --environment "Variables={PINECONE_API_KEY=${{ secrets.PINECONE_API_KEY }},PINECONE_INDEX_NAME=${{ secrets.PINECONE_INDEX_NAME }},DESTINATION_BUCKET=${{ secrets.DESTINATION_BUCKET }}}"
